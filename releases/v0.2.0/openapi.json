{
  "openapi": "3.0.1",
  "info": {
    "title": "Grid Tariff API",
    "description": "Provides grid tariffs from Swedish DSOs.",
    "version": "0.2.0",
    "contact": {
      "name": "Grid Tariff API",
      "url": "https://github.com/RI-SE/Eltariff-API"
    },
    "license": {
      "name": "Licence",
      "url": "https://github.com/RI-SE/Eltariff-API/blob/main/LICENSE"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Information",
      "description": "Information about the API implementation."
    },
    {
      "name": "Tariff",
      "description": "Grid tariff related operations."
    },
    {
      "name": "Price",
      "description": "Price related operations."
    }
  ],
  "paths": {
    "/info": {
      "get": {
        "tags": [
          "Information"
        ],
        "operationId": "GetInfo",
        "summary": "Get information about the API implementation.",
        "description": "Get information about the API implementation.",
        "responses": {
          "200": {
            "description": "Information about the API implementation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/tariffs": {
      "get": {
        "tags": [
          "Tariff"
        ],
        "operationId": "GetTariffs",
        "summary": "Get a collection of publicly available tariffs for the DSO without any customer data.",
        "description": "Get a collection of publicly available tariffs for the DSO without any customer data.",
        "responses": {
          "200": {
            "description": "All publicly available tariffs without any customer data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          }
        }
      }
    },
    "/tariffs/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/IdInPath"
        }
      ],
      "get": {
        "tags": [
          "Tariff"
        ],
        "operationId": "GetTariffById",
        "summary": "Get grid tariff for the provided id.",
        "description": "Get grid tariff for the provided id.",
        "responses": {
          "200": {
            "description": "Single grid tariff object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          }
        }
      }
    },
    "/tariffs/search": {
      "post": {
        "tags": [
          "Tariff"
        ],
        "operationId": "SearchTariffs",
        "summary": "Search for grid tariffs matching provided search parameters.",
        "description": "Search for grid tariffs matching provided search parameters.",
        "requestBody": {
          "description": "Search parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TariffsSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tariffs matching the search criteria and mapping between tariff and search parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffsSearchResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          }
        }
      }
    },
    "/prices/{componentId}": {
      "parameters": [
        {
          "name": "componentId",
          "description": "A price component id.",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Uuid"
          }
        },
        {
          "name": "fromIncluding",
          "description": "Get all defined prices from this time and forward. Default is today midnight.",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        {
          "name": "toExcluding",
          "description": "Get all defined prices up to this time. Default is fromIncluding + 7 days.",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/DateTime"
          }
        }
      ],
      "get": {
        "tags": [
          "Price"
        ],
        "operationId": "GetPrices",
        "summary": "Returns prices for a price component for a given timeperiod.",
        "description": "Returns prices for a price component for a given timeperiod.",
        "responses": {
          "200": {
            "description": "The prices for the provided component id and time period.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "IdInPath": {
        "name": "id",
        "description": "Unique identifier for an object",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      }
    },
    "schemas": {
      "InfoResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the implemented API.",
            "default": "Grid Tariff API"
          },
          "apiVersion": {
            "type": "string",
            "description": "Version of the implemented API specification.",
            "example": "1.2.3"
          },
          "implementationVersion": {
            "type": "string",
            "description": "Version of the implementation. The format is set by the operator and can differ. In this example -r4 is the revision number of the implementation and the first three numbers the API version.",
            "example": "1.2.3-r4"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/DateTime"
          },
          "operator": {
            "type": "string",
            "description": "Name of the company or organization operating this server.",
            "example": "Grid Company AB"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "identityProviderUrl": {
            "type": "string",
            "description": "URL to the identity provider server which provides access tokens.",
            "example": "https://idp.gridcompany.se/oath2/token"
          }
        },
        "required": [
          "name",
          "apiVersion",
          "lastUpdated",
          "operator",
          "timeZone"
        ],
        "additionalProperties": true
      },
      "TariffsResponse": {
        "type": "object",
        "properties": {
          "tariffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tariff"
            }
          },
          "calendarPatterns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarPattern"
            }
          }
        },
        "required": [
          "tariffs"
        ],
        "additionalProperties": false
      },
      "TariffResponse": {
        "type": "object",
        "properties": {
          "tariff": {
            "$ref": "#/components/schemas/Tariff"
          }
        },
        "required": [
          "tariff"
        ],
        "additionalProperties": false
      },
      "TariffsSearchRequest": {
        "type": "object",
        "properties": {
          "meteringPointIds": {
            "type": "array",
            "description": "List of MPIDs you are the registered owner of as a private person or your company has e legal reason to request in a customer/provider relationship.",
            "items": {
              "$ref": "#/components/schemas/MeteringPointId"
            }
          }
        },
        "required": [
          "meteringPointIds"
        ],
        "additionalProperties": false
      },
      "TariffsSearchResponse": {
        "type": "object",
        "properties": {
          "tariffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tariff"
            }
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TariffMapping"
            }
          }
        },
        "required": [
          "tariffs",
          "mappings"
        ],
        "additionalProperties": false
      },
      "PricesResponse": {
        "type": "object",
        "properties": {
          "priceList": {
            "$ref": "#/components/schemas/PriceList"
          }
        },
        "required": [
          "priceList"
        ],
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code of the error."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem."
          },
          "detail": {
            "type": "string",
            "description": "A detailed message explaining the error. May include an URL to a help page."
          }
        },
        "required": [
          "status",
          "title"
        ],
        "additionalProperties": true
      },
      "DateTime": {
        "type": "string",
        "format": "date-time",
        "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
        "example": "2025-05-25T01:00:00",
        "description": "Date-time in ISO 8601 format without offset."
      },
      "TimeZone": {
        "type": "string",
        "description": "Time zone as described in the IANA Time Zone Database (https://www.iana.org/time-zones) e.g., 'Europe/Stockholm'.",
        "example": "Europe/Stockholm"
      },
      "Uuid": {
        "type": "string",
        "format": "uuid",
        "description": "Globally unique identifier",
        "example": "216783ff-5dda-4c38-b491-d6f0fcee9a9b",
        "additionalProperties": false
      },
      "Date": {
        "type": "string",
        "format": "date",
        "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
        "example": "2025-05-25",
        "description": "Date in ISO 8601 format."
      },
      "DateInterval": {
        "type": "object",
        "description": "A date only interval where 'fromIncluding' is included and the interval is up until, but excluding, 'toExcluding'.",
        "properties": {
          "fromIncluding": {
            "$ref": "#/components/schemas/Date"
          },
          "toExcluding": {
            "$ref": "#/components/schemas/Date"
          }
        },
        "required": [
          "fromIncluding",
          "toExcluding"
        ],
        "additionalProperties": false
      },
      "Duration": {
        "description": "A time duration in the format [ISO 8601 duration format](https://www.iso.org/standard/70907.html).\nExamples:\n- \"P1D\" for one day\n- \"P1M\" for one month\n- \"P2W\" for two weeks\n- \"P3Y6M4DT12H30M5S\" for a complex duration.",
        "type": "string",
        "format": "duration",
        "example": "PT15M",
        "additionalProperties": false
      },
      "Name": {
        "type": "string",
        "description": "A short human readable name.",
        "example": "Descriptive name",
        "additionalProperties": false
      },
      "Description": {
        "description": "A longer explanatory text.",
        "type": "string",
        "example": "Fixed price for a contract with a fuse size of 25 A.",
        "additionalProperties": false
      },
      "CostFunction": {
        "description": "A pseudo code function that describes how to calculate the cost for a set of price components. Usage examples at https://someexamples.",
        "type": "string",
        "example": "sum(energy(c)*price(c))",
        "additionalProperties": false
      },
      "Currency": {
        "description": "The currency for all related prices.",
        "type": "string",
        "example": "SEK",
        "additionalProperties": false
      },
      "Price": {
        "description": "Price, VAT and currency.",
        "type": "object",
        "properties": {
          "priceExVat": {
            "type": "number",
            "format": "decimal",
            "example": 171.32
          },
          "priceIncVat": {
            "type": "number",
            "format": "decimal",
            "example": 171.32
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "required": [
          "priceExVat",
          "priceIncVat",
          "currency"
        ],
        "additionalProperties": false
      },
      "FixedPriceComponent": {
        "description": "A time period in which fixed price details are defined. Price components can be overlapping in time to define the full price for one time period.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "type": {
            "description": "Type describes if the price component is a publicly available price or customer specific.",
            "type": "string",
            "pattern": "public|specific",
            "example": "public",
            "default": "public"
          },
          "reference": {
            "description": "Reference to be used to identify this recurring price period in the cost function.",
            "type": "string",
            "example": "main",
            "default": "main"
          },
          "validPeriod": {
            "$ref": "#/components/schemas/DateInterval"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "pricedPeriod": {
            "$ref": "#/components/schemas/Duration"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "reference",
          "validPeriod",
          "price",
          "pricedPeriod"
        ],
        "additionalProperties": false
      },
      "FixedPrice": {
        "description": "Prices and information for the fixed price component of the tariff.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "costFunction": {
            "$ref": "#/components/schemas/CostFunction"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FixedPriceComponent"
            }
          }
        },
        "required": [
          "id",
          "name",
          "costFunction",
          "components"
        ],
        "additionalProperties": false
      },
      "Unit": {
        "description": "The unit of a measurement or price calculation.",
        "type": "string",
        "example": "kWh",
        "additionalProperties": false
      },
      "SpotPriceSettings": {
        "description": "Settings for a spot price relative pricing component.",
        "type": "object",
        "properties": {
          "multiplier": {
            "description": "A number used to multiply the electricity markets spot price to get a price for this price component.",
            "type": "number",
            "example": 1.25
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "required": [
          "multiplier",
          "currency"
        ],
        "additionalProperties": false
      },
      "Time": {
        "type": "string",
        "pattern": "^\\d{2}:\\d{2}:\\d{2}$",
        "example": "01:00:00",
        "description": "Time in ISO 8601 format without offset."
      },
      "CalendarPatternReference": {
        "description": "Reference to be used to identify this CalendarPattern from an ActivePeriod object.",
        "type": "string",
        "example": "weekdays"
      },
      "CalendarPatternReferences": {
        "type": "object",
        "description": "A collection of calendar patterns that defines which days and/or dates to use for an active period.",
        "properties": {
          "include": {
            "description": "A list of calendar patterns to be included in the active period.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarPatternReference"
            }
          },
          "exclude": {
            "description": "A list of calendar patterns to be excluded from an active period.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarPatternReference"
            }
          }
        },
        "additionalProperties": false
      },
      "ActivePeriod": {
        "type": "object",
        "description": "A time interval where \"fromIncluding\" is included and the interval is up to, but excluding \"toExcluding\".",
        "properties": {
          "fromIncluding": {
            "$ref": "#/components/schemas/Time"
          },
          "toExcluding": {
            "$ref": "#/components/schemas/Time"
          },
          "calendarPatternReferences": {
            "$ref": "#/components/schemas/CalendarPatternReferences"
          }
        },
        "required": [
          "fromIncluding",
          "toExcluding",
          "calendarPatternReferences"
        ],
        "additionalProperties": false
      },
      "RecurringPeriod": {
        "description": "A short period of time that recurs several times during a season or other long time period.",
        "type": "object",
        "properties": {
          "reference": {
            "description": "Reference to be used to identify this recurring period in a function.",
            "type": "string",
            "example": "high",
            "default": "main"
          },
          "frequency": {
            "$ref": "#/components/schemas/Duration"
          },
          "activePeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivePeriod"
            }
          }
        },
        "required": [
          "reference",
          "frequency",
          "activePeriods"
        ],
        "additionalProperties": false
      },
      "EnergyPriceComponent": {
        "description": "A time period in which energy price details are defined. Price components can be overlapping in time to define the full price for one time period.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "type": {
            "type": "string",
            "pattern": "fixed|spot",
            "example": "fixed",
            "default": "fixed"
          },
          "reference": {
            "description": "Reference to be used to identify this recurring price period in the cost function.",
            "type": "string",
            "example": "high",
            "default": "main"
          },
          "validPeriod": {
            "$ref": "#/components/schemas/DateInterval"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "spotPriceSettings": {
            "$ref": "#/components/schemas/SpotPriceSettings"
          },
          "recurringPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPeriod"
            }
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "reference",
          "validPeriod"
        ],
        "additionalProperties": false
      },
      "EnergyPrice": {
        "description": "Prices and information for the energy price component of the tariff.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "costFunction": {
            "$ref": "#/components/schemas/CostFunction"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnergyPriceComponent"
            }
          }
        },
        "required": [
          "id",
          "name",
          "costFunction",
          "unit",
          "components"
        ],
        "additionalProperties": false
      },
      "Url": {
        "type": "string",
        "description": "A URL string.",
        "example": "/prices/216783ff-5dda-4c38-b491-d6f0fcee9a9b",
        "additionalProperties": false
      },
      "PeakFunction": {
        "description": "A pseudo code function that describes how to identify a power peak for one power price component. Usage examples at https://someexamples.",
        "type": "string",
        "example": "max(peak(high),peak(low)/2)",
        "default": "peak(main)",
        "additionalProperties": false
      },
      "PeakIdentificationSettings": {
        "description": "Settings that defines how to identify a power peak during a billing period.",
        "type": "object",
        "properties": {
          "peakFunction": {
            "$ref": "#/components/schemas/PeakFunction"
          },
          "peakIdentificationPeriod": {
            "$ref": "#/components/schemas/Duration"
          },
          "peakDuration": {
            "$ref": "#/components/schemas/Duration"
          },
          "numberOfPeaksForAverageCalculation": {
            "description": "The number of peaks within a peak pricing period for calculating average peak for that period.",
            "type": "integer",
            "example": 3
          }
        },
        "required": [
          "peakFunction",
          "peakIdentificationPeriod",
          "peakDuration",
          "numberOfPeaksForAverageCalculation"
        ],
        "additionalProperties": false
      },
      "PowerPriceComponent": {
        "description": "A time period in which power price details are defined. Price components can be overlapping in time to define the full price for one time period.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "type": {
            "type": "string",
            "pattern": "peak|dynamic",
            "example": "peak",
            "default": "peak"
          },
          "reference": {
            "description": "Reference to be used to identify this recurring price period in the cost function.",
            "type": "string",
            "example": "high",
            "default": "main"
          },
          "validPeriod": {
            "$ref": "#/components/schemas/DateInterval"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "url": {
            "$ref": "#/components/schemas/Url"
          },
          "peakIdentificationSettings": {
            "$ref": "#/components/schemas/PeakIdentificationSettings"
          },
          "recurringPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPeriod"
            }
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "reference",
          "validPeriod"
        ],
        "additionalProperties": false
      },
      "PowerPrice": {
        "description": "Prices with parameters that defines power peak identification and price calculation for the power component of the tariff.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "costFunction": {
            "$ref": "#/components/schemas/CostFunction"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PowerPriceComponent"
            }
          }
        },
        "required": [
          "id",
          "name",
          "costFunction",
          "unit",
          "components"
        ],
        "additionalProperties": false
      },
      "Tariff": {
        "description": "Information about the tariff that are static and does not change during at least a month.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "description": "Descriptive short name of the grid tariff.",
            "type": "string"
          },
          "description": {
            "description": "Detailed description of the grid tariff.",
            "type": "string"
          },
          "validPeriod": {
            "$ref": "#/components/schemas/DateInterval"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/DateTime"
          },
          "companyName": {
            "description": "Name of the grid company.",
            "type": "string"
          },
          "companyOrgNo": {
            "description": "Organization number and unique identifier of the grid company.",
            "type": "string"
          },
          "product": {
            "description": "A persistent and unique (on company level) reference to identify a given product during its entire lifecycle. If set, the reference allows for a seamless transition when a products tariff definition gets updated.",
            "type": "string",
            "example": "net.consume.std.25"
          },
          "direction": {
            "description": "Indicates if this is a tariff for consumption or production. Valid values are \"consumption\" and \"production\".",
            "type": "string",
            "pattern": "consumption|production",
            "default": "consumption"
          },
          "billingPeriod": {
            "$ref": "#/components/schemas/Duration"
          },
          "fixedPrice": {
            "$ref": "#/components/schemas/FixedPrice"
          },
          "energyPrice": {
            "$ref": "#/components/schemas/EnergyPrice"
          },
          "powerPrice": {
            "$ref": "#/components/schemas/PowerPrice"
          }
        },
        "required": [
          "id",
          "name",
          "validPeriod",
          "timeZone",
          "lastUpdated",
          "companyName",
          "companyOrgNo",
          "product",
          "direction",
          "billingPeriod",
          "fixedPrice",
          "energyPrice",
          "powerPrice"
        ],
        "additionalProperties": false
      },
      "CalendarPattern": {
        "type": "object",
        "description": "A pattern of calendar events.",
        "properties": {
          "reference": {
            "$ref": "#/components/schemas/CalendarPatternReference"
          },
          "frequency": {
            "$ref": "#/components/schemas/Duration"
          },
          "days": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Date"
            }
          }
        },
        "required": [
          "reference",
          "frequency"
        ],
        "additionalProperties": false
      },
      "MeteringPointId": {
        "type": "string",
        "description": "Identifier for a physical metering point (MPID)",
        "example": "735999000000000001",
        "additionalProperties": false
      },
      "TariffMapping": {
        "type": "object",
        "properties": {
          "tariffId": {
            "$ref": "#/components/schemas/Uuid"
          },
          "meteringPointIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeteringPointId"
            }
          }
        },
        "required": [
          "tariffId",
          "meteringPointIds"
        ],
        "additionalProperties": false
      },
      "PriceListEntry": {
        "description": "A timed price entry that belongs to a price list.",
        "type": "object",
        "properties": {
          "timestamp": {
            "$ref": "#/components/schemas/DateTime"
          },
          "priceExVat": {
            "type": "number",
            "format": "decimal",
            "example": 100
          },
          "priceIncVat": {
            "type": "number",
            "format": "decimal",
            "example": 125
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "required": [
          "timestamp",
          "priceExVat",
          "priceIncVat",
          "currency"
        ],
        "additionalProperties": false
      },
      "PriceList": {
        "description": "Time differentiated prices for a price component.",
        "type": "object",
        "properties": {
          "componentId": {
            "$ref": "#/components/schemas/Uuid"
          },
          "resolution": {
            "$ref": "#/components/schemas/Duration"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceListEntry"
            }
          }
        },
        "required": [
          "componentId",
          "resolution",
          "prices"
        ],
        "additionalProperties": false
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 400,
              "title": "Bad Request",
              "detail": "The request object is invalid.",
              "instance": "/endpoint"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 401,
              "title": "Unauthorized",
              "detail": "You do not have access to make this request.",
              "instance": "/endpoint"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 403,
              "title": "Forbidden",
              "detail": "The request you made is not allowed.",
              "instance": "/endpoint"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 404,
              "title": "Not Found",
              "detail": "The requested resource could not be found.",
              "instance": "/endpoint"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 501,
              "title": "Not Implemented",
              "detail": "The request method is not yet implemented on this server.",
              "instance": "/endpoint"
            }
          }
        }
      }
    }
  }
}