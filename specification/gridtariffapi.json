{
  "openapi": "3.1.0",

  "info": {
    "title": "Grid Tariff API",
    "description": "Provides grid tariffs from Swedish DSOs.",
    "version": "2.0.0",
    "contact": {
      "name": "Grid Tariff API",
      "url": "https://github.com/RI-SE/Eltariff-API"
    },
    "license": {
      "name": "Licence",
      "url": "https://github.com/RI-SE/Eltariff-API/blob/main/LICENSE"
    }
  },

  "servers": [
    {
      "url": "/"
    }
  ],

  "security": [
    {
      "bearerAuth": []
    }
  ],

  "paths": {
    "/api/Tariffs/All": {
      "get": {
        "tags": [
          "Tariff"
        ],
        "operationId": "GetAllTariffs",
        "summary": "Returns a collection of all available tariffs for the DSO providing the endpoint.",
        "responses": {
          "200": {
            "description": "All available tariffs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },

    "/api/Tariffs/ForMeteringPoints": {
      "post": {
        "tags": [
          "Tariff"
        ],
        "operationId": "GetTariffsWithMpidMap",
        "summary": "Returns a collection of all available tariffs and a mapping between provided MPIDs and tariff id. If no MPIDs are provided, no mapping is returned.",
        "requestBody": {
          "description": "MeteringPointIds to match tariffs for.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TariffsWithMpidRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All available tariffs and a mapping between MPID and tariff id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffsWithMpidResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },

    "/api/Prices": {
      "post": {
        "tags": [
          "Price"
        ],
        "operationId": "GetPrices",
        "summary": "Returns prices for a price component for a given timeperiod.",
        "requestBody": {
          "description": "Price component id and time period to get prices for.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The prices for the provided component id and time period.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },

    "schemas": {
      "TariffsResponse": {
        "type": "object",
        "properties": {
          "tariffs": {
            "type": "array",
            "items": {
              "$ref": "tariff.schema.json#/definitions/Tariff"
            }
          }
        },
        "additionalProperties": false
      },

      "TariffsWithMpidRequest": {
        "type": "object",
        "properties": {
          "meteringPointIds": {
            "type": "array",
            "description": "List of MPIDs you are the registered owner of as a private person or your company has e legal reason to request in a customer/provider relationship.",
            "items": {
              "$ref": "common.schema.json#/definitions/MeteringPointId"
            }
          }
        },
        "additionalProperties": false
      },

      "TariffsWithMpidResponse": {
        "type": "object",
        "properties": {
          "tariffs": {
            "type": "array",
            "items": {
              "$ref": "tariff.schema.json#/definitions/Tariff"
            }
          },
          "mpidTariffPairs": {
            "type": "array",
            "items": {
              "$ref": "common.schema.json#/definitions/MpidTariffPair"
            }
          }
        },
        "additionalProperties": false
      },

      "PricesRequest": {
        "type": "object",
        "description": "Query to get a list of tariff prices for a given tariff id and time interval.",
        "properties": {
          "componentId": {
            "$ref": "common.schema.json#/definitions/Uuid"
          },
          "duration": {
            "description": "A duration in time that starts at 00:00 (midnight) of the day when the request is made.",
            "$ref": "time.schema.json#/definitions/Duration"
          }
        },
        "additionalProperties": false
      },

      "PricesResponse": {
        "type": "object",
        "properties": {
          "componentPrices": {
            "$ref": "price.schema.json#/definitions/ComponentPrices"
          }
        },
        "additionalProperties": false
      },

      "ProblemDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code of the error."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem."
          },
          "detail": {
            "type": "string",
            "description": "A detailed message explaining the error."
          },
          "instance": {
            "type": "string",
            "description": "URI reference identifying the specific occurrence of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URI reference that identifies the problem type."
          }
        },
        "required": ["status", "title", "detail"],
        "additionalProperties": false
      }

    },

    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 400,
              "title": "Bad Request",
              "detail": "The request object is invalid.",
              "instance": "/api/endpoint"
            }
          }
        }
      },

      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 401,
              "title": "Unauthorized",
              "detail": "You do not have access to make this request.",
              "instance": "/api/endpoint"
            }
          }
        }
      },

      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 403,
              "title": "Forbidden",
              "detail": "The request you made is not allowed.",
              "instance": "/api/endpoint"
            }
          }
        }
      },

      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 404,
              "title": "Not Found",
              "detail": "The requested resource could not be found.",
              "instance": "/api/endpoint"
            }
          }
        }
      }
    }
  }
}
