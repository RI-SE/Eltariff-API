#!/bin/sh
set -eu # Exit on any failure and unset variables

bundle_file_pattern="specification/releases/gridtariffapi-v"
api_index_file="specification/gridtariffapi.json"
catalogue_api_index_file="specification/catalogueapi.json"

if git diff --cached --name-only | grep -q "$bundle_file_pattern"; then
  echo "❌ ERROR: Generated bundle files ($bundle_file_pattern*) should only be modified by GitHub Actions!"
  echo "➡️  Revert any changes to the following files before commit:"
  git diff --cached --name-only | grep "$bundle_file_pattern"
  exit 1
fi

if git diff --cached --name-only | grep -q "specification/"; then
  version=$(jq -r '.info.version' $api_index_file)
  for file in $(git ls-files $bundle_file_pattern*); do
    if [[ -f $file ]]; then
      filename=$(basename $file)
      if [[ "$filename" == *"$version"* ]]; then
        echo "❌ ERROR: The API version $version has already been stored in file $filename."
        echo "➡️  You need to increase the API version (.info.version) in $api_index_file before changing the API specification."
        exit 1
      fi
    fi
  done
fi

mkdir -p build
npx @redocly/cli bundle specification/gridtariffapi.json -o build/openapi.json

npx @redocly/cli lint build/openapi.json
if [ $? -ne 0 ]; then
  echo "❌ ERROR: OpenAPI validation failed. Please fix the issues before committing."
  exit 1
fi

npx @stoplight/spectral-cli lint build/openapi.json --ruleset .spectral.yaml
if [ $? -ne 0 ]; then
  echo "❌ ERROR: Spectral lint failed. Please fix the issues before committing."
  exit 1
fi

# npx @redocly/cli lint $catalogue_api_index_file
# if [ $? -ne 0 ]; then
#   echo "❌ ERROR: OpenAPI validation failed. Please fix the issues before committing."
#   exit 1
# fi

npx @stoplight/spectral-cli lint $catalogue_api_index_file --ruleset .spectral.yaml
if [ $? -ne 0 ]; then
  echo "❌ ERROR: Spectral lint failed. Please fix the issues before committing."
  exit 1
fi

dotnet build src/ControllerGenerator
dotnet build src/SwaggerUI

echo "✅ All checks passed."

exit 0
